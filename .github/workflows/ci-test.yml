name: CI/CD HealthTrack

description: >
  Este pipeline construye el proyecto, ejecuta pruebas unitarias con cobertura
  JaCoCo, pruebas de rendimiento con JMeter (HTML), análisis de calidad con
  SonarCloud, y finalmente pruebas funcionales con Selenium en Chrome y Firefox
  (HTML). Genera reportes como artifacts.

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
    paths-ignore:
      - "**/README.md"

jobs:
  build-test-analyze:
    name: Build, Test, Sonar & Artifacts
    runs-on: ubuntu-latest

    steps:
      - name: ✨ Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: ☕ Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: 🔧 Instalar dependencias
        run: mvn install -DskipTests

      - name: ✨ SonarCloud Analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
        mvn sonar:sonar \
          -Dsonar.projectKey=Modulo4-Prueba \
          -Dsonar.organization=Devops-Team-Adalit \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
          -Dsonar.branch.name=${{ github.ref_name }} \
          -Dsonar.branch.target=main

      - name: 🌐 Levantar página HTML para prueba UI
        run: |
          nohup python3 -m http.server 8080 --directory ./web &

      - name: 🔎 Ejecutar pruebas funcionales Selenium (Chrome)
        run: mvn -Dtest=UserFlowUITest#testWithChrome test

      - name: 📃 Subir reporte Selenium Chrome
        uses: actions/upload-artifact@v4
        with:
          name: selenium-chrome-report
          path: target/selenium-reports/chrome/

      - name: 🔎 Ejecutar pruebas funcionales Selenium (Firefox)
        run: mvn -Dtest=UserFlowUITest#testWithFirefox test

      - name: 📃 Subir reporte Selenium Firefox
        uses: actions/upload-artifact@v4
        with:
          name: selenium-firefox-report
          path: target/selenium-reports/firefox/

      - name: ✅ Ejecutar pruebas unitarias (JUnit) y generar cobertura HTML (JaCoCo)
        run: mvn clean verify

      - name: 📊 Subir reporte de cobertura HTML (JaCoCo)
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-html-report
          path: target/site/jacoco/


      - name: 📡 Publicar logs de pruebas unitarias
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-logs
          path: target/surefire-reports/

      - name: 🔹 Instalar JMeter
        run: |
          sudo apt-get update && sudo apt-get install -y jmeter

      - name: 🔢 Ejecutar prueba de rendimiento (JMeter)
        run:
          jmeter -n -t performance/performance_test.jmx -l
          performance/results.jtl

      - name: 🚜 Generar reporte HTML de JMeter
        run: |
          mkdir -p performance/html-report
          jmeter -g performance/results.jtl -o performance/html-report

      - name: 📃 Subir reporte HTML JMeter
        uses: actions/upload-artifact@v4
        with:
          name: jmeter-html-report
          path: performance/html-report/
